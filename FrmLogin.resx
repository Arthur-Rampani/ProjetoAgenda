<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>